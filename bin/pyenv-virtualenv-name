#!/usr/bin/env bash
# Usage: pyenv virtualenv-name
# Summary: Show the current virtual Python environment

set -e
[ -n "$PYENV_DEBUG" ] && set -x

if [ -z "$PYENV_VIRTUAL_ENV" ]; then
  PYENV_VIRTUAL_ENV_FILE="$(pyenv-virtualenv-file || true)"
  PYENV_VIRTUAL_ENV="$(pyenv-virtualenv-file-read "$PYENV_VIRTUAL_ENV_FILE" || true)"
fi

OLDIFS="$IFS"
IFS=$'\n' scripts=(`pyenv-hooks virtualenv-name`)
IFS="$OLDIFS"
for script in "${scripts[@]}"; do
  source "$script"
done

if [ -z "$PYENV_VIRTUAL_ENV" ]; then
  echo "pyenv: no virtual environment selected" >&2
  exit 1
fi

virtualenv_exists() {
  local version="$1"
  local virtualenv="$2"

  if [ "$version" = "system" ]; then
    [ -d "${PYENV_ROOT}/versions/${virtualenv}" ]
  else
    [ -d "${PYENV_ROOT}/versions/${version}/envs/${virtualenv}" ]
  fi
}

OLDIFS="$IFS"
IFS=: PYENV_VERSION=($(pyenv-version-name))
IFS="$OLDIFS"

if virtualenv_exists "$PYENV_VERSION" "$PYENV_VIRTUAL_ENV"; then
  echo $PYENV_VIRTUAL_ENV
else
  echo "pyenv: \`$PYENV_VIRTUAL_ENV' is not a virtual environment (set by $(pyenv-virtualenv-origin))" >&2
  exit 1
fi
